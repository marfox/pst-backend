<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.wikidata.query.rdf</groupId>
    <artifactId>parent</artifactId>
    <version>0.2.5-SNAPSHOT</version>
  </parent>

  <artifactId>pst-backend</artifactId>

  <name>Wikidata primary sources tool back end</name>
  <description>A set of Web services to upload and curate third-party datasets. Based on Blazegraph.</description>
  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <properties>
    <!-- Blazegraph depends on an older version of Sesame, but this module needs 2.8.1 -->
    <sesame.version>2.8.1</sesame.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>
    <dependency>
      <groupId>com.googlecode.json-simple</groupId>
      <artifactId>json-simple</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>fluent-hc</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpcore</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpmime</artifactId>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-library</artifactId>
    </dependency>
    <dependency>
      <groupId>org.openrdf.sesame</groupId>
      <artifactId>sesame-model</artifactId>
    </dependency>
    <dependency>
      <groupId>org.openrdf.sesame</groupId>
      <artifactId>sesame-query</artifactId>
    </dependency>
    <dependency>
      <groupId>org.openrdf.sesame</groupId>
      <artifactId>sesame-queryresultio-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.openrdf.sesame</groupId>
      <artifactId>sesame-rio-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.wikidata.query.rdf</groupId>
      <artifactId>common</artifactId>
    </dependency>
    <dependency>
      <groupId>org.wikidata.query.rdf</groupId>
      <artifactId>tools</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <finalName>primary-sources-tool-backend-${project.version}</finalName>
    <plugins>
      <plugin>
        <groupId>com.carrotsearch.randomizedtesting</groupId>
        <artifactId>junit4-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>jar-with-dependencies</id>
            <goals>
              <goal>single</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <descriptorRefs>
                <descriptorRef>jar-with-dependencies</descriptorRef>
              </descriptorRefs>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <!--
              Copy the blazegraph-service WAR in this module target/war
              directory, so that we don't have a reference to a path in another
              module (each module should be independent, except for explicit
              dependencies).
            -->
            <id>copy-war</id>
            <goals>
              <goal>copy</goal>
            </goals>
            <phase>process-resources</phase>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.wikidata.query.rdf</groupId>
                  <artifactId>blazegraph-service</artifactId>
                  <type>war</type>
                </artifactItem>
              </artifactItems>
              <outputDirectory>${project.build.directory}/war</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <configuration>
          <contextHandlers>
            <contextHandler implementation="org.eclipse.jetty.maven.plugin.JettyWebAppContext">
              <war>${project.build.directory}/war/blazegraph-service-${project.version}.war</war>
              <contextPath>/bigdata</contextPath>
            </contextHandler>
          </contextHandlers>
          <systemProperties combine.children="append">
            <systemProperty>
              <!-- By default Blazegraph's WAR thinks it running in tomcat and uses funky relative paths. They suggest
                you overwrite it. We do. -->
              <name>com.bigdata.rdf.sail.webapp.ConfigParams.propertyFile</name>
              <value>${project.parent.basedir}/tools/src/test/resources/blazegraph/RWStore.properties</value>
            </systemProperty>
            <systemProperty>
              <name>com.bigdata.rdf.sail.sparql.PrefixDeclProcessor.additionalDeclsFile</name>
              <value>${project.parent.basedir}/dist/src/script/prefixes.conf</value>
            </systemProperty>
            <systemProperty>
              <name>wikibaseServiceWhitelist</name>
              <value>${project.parent.basedir}/tools/src/test/resources/blazegraph/whitelist.txt</value>
            </systemProperty>
            <systemProperty>
              <name>org.wikidata.query.rdf.blazegraph.mwapi.MWApiServiceFactory.config</name>
              <value>${project.parent.basedir}/tools/src/test/resources/blazegraph/services.json</value>
            </systemProperty>
          </systemProperties>
        </configuration>
        <executions>
          <execution>
            <id>start-blazegraph</id>
            <!-- This complains some because this project _isn't_ a war. But we want to start the Blazegraph war. -->
            <goals>
              <goal>start</goal>
            </goals>
            <phase>pre-integration-test</phase>
          </execution>
          <execution>
            <id>stop-blazegraph</id>
            <goals>
              <goal>stop</goal>
            </goals>
            <phase>post-integration-test</phase>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
